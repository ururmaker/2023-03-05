import numpy as np

def np_add(a, b):
    new_a = np.array([a])
    new_b = np.array([b])
    c = new_a + new_b
    c = float(str(c)[1:-1])
    return c

def np_subtract(a, b):
    new_a = np.array([a])
    new_b = np.array([b])
    c = new_a - new_b
    c = float(str(c)[1:-1])
    return c

def np_multiply(a, b):
    new_a = np.array([a])
    new_b = np.array([b])
    c = new_a * new_b
    c = float(str(c)[1:-1])
    return c

def get_remainder(a, b):
    new_a = np.array([a])
    c = new_a % 60
    c = float(str(c)[1:-1])
    return c

def sex2seconds(sex):
    xs = sex.split(sep=":")
    seconds = np_add(int(xs[0]) * 3600 + int(xs[1]) * 60, float(xs[2]))
    return seconds

def seconds2sex(seconds):
    h = seconds // 3600
    m = seconds % 3600 // 60
    s = get_remainder(seconds, 60)
    str_s = str(s)
    if str_s[1] == ".":
        str_s = "0" + str_s
    if str_s[-2] == ".":
        str_s = str_s + "00"
    if str_s[-3] == ".":
        str_s = str_s + "0"
    if len(str_s) != 6:
        raise Exception("Not Equal 6!")
    sex = str(int(h)).zfill(2) + ":" + str(int(m)).zfill(2) + ":" + str_s
    return sex

print("Title:")
title = input()
if len(title) > 50:
    raise Exception("Too Long!")
en_file = open("en.vtt", mode="r", encoding="utf-8")
en_content = en_file.read()
en_file.close()
ens = en_content.split(sep="\n\n")
if ens[0].startswith("WEBVTT"):
    ens.pop(0)
while ens[-1] == str():
    ens.pop(-1)
zh_file = open("zh.vtt", mode="r", encoding="utf-8")
zh_content = zh_file.read()
zh_file.close()
zhs = zh_content.split(sep="\n\n")
if zhs[0].startswith("WEBVTT"):
    zhs.pop(0)
while zhs[-1] == str():
    zhs.pop(-1)
if len(ens) != len(zhs):
    raise Exception("Not Equal!")
subtitles = []
for n in range(len(ens)):
    en = ens[n]
    lines = en.split(sep="\n")
    if len(lines) > 3:
        raise Exception("More than 3 lines!")
    for i in range(len(lines)):
        line = lines[i]
        if i == 0:
            timez = line.split(sep=" --> ")
            start = timez[0]
            end = timez[1]
        while line.startswith(" "):
            line = line[1:]
        while line.endswith(" "):
            line = line[:-1]
        if i == 1:
            en_text = line
            continue
        if i == 2:
            if not en_text.endswith("&nbsp;"):
                raise Exception("NOT Endswith nbsp!")
            else:
                en_text = en_text[:-6] + " " + line
    zh = zhs[n]
    lines = zh.split(sep="\n")
    if len(lines) > 2:
        raise Exception("More than 2 lines!")
    line = lines[1]
    while line.startswith(" "):
        line = line[1:]
    while line.endswith(" "):
        line = line[:-1]
    zh_text = line
    subtitle = {"start": start, "end": end, "en": en_text, "zh": zh_text}
    subtitles.append(subtitle)
new_subtitles = []
new_subtitle = {}
for m in range(len(subtitles)):
    subtitle = subtitles[m]
    if len(new_subtitle) == 0:
        new_subtitle = subtitle
        if new_subtitle["en"].endswith("&nbsp;&nbsp;"):
            new_subtitle["en"] = new_subtitle["en"][:-12]
        else:
            new_subtitles.append(new_subtitle)
            new_subtitle = {}
        continue
    new_subtitle["end"] = subtitle["end"]
    new_subtitle["en"] = new_subtitle["en"] + " " + subtitle["en"]
    new_subtitle["zh"] = new_subtitle["zh"] + subtitle["zh"]
    if new_subtitle["en"].endswith("&nbsp;&nbsp;"):
        new_subtitle["en"] = new_subtitle["en"][:-12]
    else:
        new_subtitles.append(new_subtitle)
        new_subtitle = {}
subtitles = new_subtitles
for u in range(len(subtitles)):
    if subtitles[u]["zh"][0] in "，。：；、？》）”":
        subtitles[u]["zh"] = subtitles[u]["zh"][1:]
        subtitles[u-1]["zh"] = subtitles[u-1]["zh"] + subtitles[u]["zh"][0]
    if u + 1 == len(subtitles):
        subtitles[u]["end"] = seconds2sex(np_add(sex2seconds(subtitles[u]["end"]), 0.5))
    else:
        end_extra = np_multiply(np_subtract(sex2seconds(subtitles[u + 1]["start"]), sex2seconds(subtitles[u]["end"])), 0.9)
        if end_extra > 0.5:
            end_extra = 0.5
        if end_extra > 0:
            if len(str(end_extra)) > 5:
                end_extra = round(end_extra, ndigits=3)
            subtitles[u]["end"] = seconds2sex(np_add(sex2seconds(subtitles[u]["end"]), end_extra))
file = open("subtitle.ass", mode="w", encoding="utf-8")
file.write("[Script Info]\n")
file.write("; Script generated by FFmpeg/Lavc59.55.103\n")
file.write("ScriptType: v4.00+\n")
file.write("PlayResX: 384\n")
file.write("PlayResY: 288\n")
file.write("ScaledBorderAndShadow: no\n")
file.write("WrapStyle: 1\n")
file.write("YCbCr Matrix: None\n\n")
file.write("[V4+ Styles]\n")
file.write("Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\n")
file.write("Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,1\n")
if len(title) > 40:
    file.write("Style: Title,Sitka Small Bold,22,&H5562FC,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,0,0,7,8,10,6,1\n")
else:
    file.write("Style: Title,Sitka Small Bold,28,&H5562FC,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,0,0,7,8,10,3.2,1\n")
file.write("Style: Logo,Noto Sans SC Black,14,&H2F86FF,&Hffffff,&H0,&H0,0,0,0,0,100,100,1,0,1,1,1,9,10,2,1,1\n")
file.write("Style: English,Sitka Small Bold,24,&H0,&H0,&H0,&H0,0,0,0,0,100,100,0,0,1,0,0,7,12,10,53,1\n")
file.write("Style: Chinese,Noto Sans SC Black,15,&H0,&Hffffff,&H0,&H0,0,0,0,0,100,100,0.75,0,1,0,0,7,12,10,240,1\n")
file.write("Style: Note,Noto Sans SC Black,12,&H2F86FF,&Hffffff,&H0,&H0,0,0,0,0,100,100,1,0,1,1,0,8,10,10,227,1\n\n")
file.write("[Events]\n")
file.write("Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text\n")
last_end = subtitles[-1]["end"]
if last_end.startswith("0"):
    last_end = last_end[1:]
if last_end.endswith("0"):
    last_end = last_end[:-1]
else:
    new_s = str(round(float(last_end[-6:]), ndigits=2))
    if new_s[1] == ".":
        new_s = "0" + new_s
    if new_s[-2] == ".":
        new_s = new_s + "0"
    last_end = last_end[:-6] + new_s
title_sub = "Dialogue: 0,{},{},{},,0,0,0,,{}\n".format("0:00:00.00", last_end, "Title", title)
file.write(title_sub)
logo_sub = "Dialogue: 0,{},{},{},,0,0,0,,{}\n".format("0:00:00.00", last_end, "Logo", "孜孜英语")
file.write(logo_sub)
note_sub = "Dialogue: 0,{},{},{},,0,0,0,,{}\n".format("0:00:00.00", last_end, "Note", "中文字幕是机翻，仅供参考")
file.write(note_sub)
for k in range(len(subtitles)):
    subtitle = subtitles[k]
    start = subtitle["start"]
    if start.startswith("0"):
        start = start[1:]
    if start.endswith("0"):
        start = start[:-1]
    else:
        new_s = str(round(float(start[-6:]), ndigits=2))
        if new_s[1] == ".":
            new_s = "0" + new_s
        if new_s[-2] == ".":
            new_s = new_s + "0"
        start = start[:-6] + new_s
    end = subtitle["end"]
    if end.startswith("0"):
        end = end[1:]
    if end.endswith("0"):
        end = end[:-1]
    else:
        new_s = str(round(float(end[-6:]), ndigits=2))
        if new_s[1] == ".":
            new_s = "0" + new_s
        if new_s[-2] == ".":
            new_s = new_s + "0"
        end = end[:-6] + new_s
    en_text = subtitle["en"]
    if "&amp;" in en_text:
        en_text = en_text.replace("&amp;", "&")
    en_sub = "Dialogue: 0,{},{},{},,0,0,0,,{}".format(start, end, "English", en_text)
    file.write(en_sub)
    file.write("\n")
    zh_text = subtitle["zh"]
    if zh_text == en_text:
        continue
    if "&amp;" in zh_text:
        zh_text = zh_text.replace("&amp;", "&")
    if "什至" in zh_text:
        zh_text = zh_text.replace("什至", "甚至")
    cs = list(zh_text)
    new_zh = "{\\q2}"
    c_count = 0
    spacing = 0.75
    for i in range(len(cs)):
        c = cs[i]
        if c in " 01234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-_":
            if spacing != 0:
                new_zh = new_zh + "{\\fsp0}" + c
                spacing = 0
            else:
                new_zh = new_zh + c
            if c in "ABCDEFGHIJKLMNOPQRSTUVWXYZ":
                c_count = c_count + 0.75
            else:
                c_count = c_count + 0.5
        else:
            if spacing == 0:
                new_zh = new_zh + "{\\fsp0.75}" + c
                spacing = 0.75
            else:
                new_zh = new_zh + c
            c_count = c_count + 1
        if c_count >= 37 and i+1 < len(cs):
            if cs[i+1] in "，。：；、？》）”":
                continue
            if cs[i] in " 01234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-_" and cs[i+1] in " 01234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-_":
                continue
            new_zh = new_zh + "\\N"
            c_count = 0
        if c_count > 40:
            print(new_zh)
            raise Exception("Too Long!")
    n_count = new_zh.count("\\N")
    if n_count > 2:
        print(new_zh)
        raise Exception("More than 3 Lines!")
    zh_text = new_zh
    zh_sub = "Dialogue: 0,{},{},{},,0,0,0,,{}".format(start, end, "Chinese", zh_text)
    file.write(zh_sub)
    file.write("\n")
file.close()
